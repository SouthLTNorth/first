// 数组循环
for(var i = 0; i < arr.length; i++) {
  // i-----arr[i]
}
arr.forEach((item, i) => {})
for(var i in arr) {
  // i-----arr[i]
}

// 数组重处理(返回新数组)
arr.map(function(item, i, arr){
  return item * 2;
})

// 数组过滤(返回新数组)--去重
arr.filter(function(item, i, arr){
  return arr.indexOf(item) === i;// 数组某项值是否存在
})

// 数组判断(返回布尔值--只要一个满足就返回true)
arr.some(function(item){
  return item > 2;
})
// 数组判断(返回布尔值--全部满足返回true)
arr.every(function(item){
  return item > 2;
})

// 数组累加(reduce:从左到右 reduceRight:从右到左)
arr.reduce(function(i, j){
  return i + j;
})

// 数组去重(返回对象)
new Set(arr);

// 数组排序
arr.sort(function(a, b){return a - b;});

// 对象循环
for(var key of obj) {
  // key-----obj[key]
}

// 其他循环
while(条件){}
do{}while(条件)//至少执行一次

// 字符串补齐
str.padEnd(补齐后长度, 补齐字符);
str.padStart(补齐后长度, 补齐字符);

// 字符串截取
str.slice(开始下标, 结束下标);

// 字符匹配(返回数组)
str.match(searchValue);
str.match(regexp);

// ASCII 1-127

// Math方法
Math.abs(num);// 返回一个数的绝对值
Math.ceil(float);// 向上取整
Math.floor(float);// 向下取整
Math.cos(angle);// 返回一个值的余弦值
Math.min(num, num, num);// 返回指定数据中最小值
Math.max(num, num, num);// 返回指定数据中最大值
Math.round(float);// 四舍五入
Math.sqrt(num);// 返回的是一个数的平方根。
Math.pow(base, exponent);// 返回基数(base)的指数(exponent)次幂。
Math.random();// 返回一个浮点，伪随机数范围从0到小于1，从0往上不包括1
Math.round(Math.random() * (m - n) + n);// 返回m到n的随机数
Math.sin(angle);// 返回一个值的正弦值
Math.trunc(float);// 返回的是一个数的整数部分，不管正数还是负数，直接去掉小数点及之后的部分

// 十进制转n进制
num.toString(n);
// n进制转十进制
parseInt(num, n);

// 32位浮点数范围: 6位小数
